import matplotlib.pyplot as plt
import  numpy as np

# Data
y = [


(176,160,137
),
(176,159,137
),
(173,159,138
),
(172,158,140
),
(175,157,139
),
(176,157,140
),
(171,157,141
),
(170,157,139
),
(170,157,139
),
(172,157,139
),
(168,156,138
),
(172,156,139
),
(170,155,140
),
(172,155,140
),
(167,157,139
),
(167,157,139
),
(170,156,139
),
(167,156,140
),
(166,156,139
),
(166,155,141
),
(168,156,138
),
(166,156,138
),
(167,156,136
),
(169,156,137
),
(165,155,149
),
(176,180,0
),
(174,145,0
),
(165,135,15
),
(152,122,41
),
(178,151,555
),
(179,167,415
),
(178,176,353
),
(179,177,318
),
(176,177,283
),
(176,175,257
),
(178,175,236
),
(176,173,218
),
(176,171,205
),
(172,168,193
),
(175,167,184
),
(173,165,178
),
(168,165,171
),
(169,163,165
),
(168,163,160
),
(171,162,157
),
(170,160,153
),
(170,160,152
),
(169,158,150
),
(166,158,146
),
(165,159,145
),
(165,160,162
),
(202,191,0
),
(184,154,0
),
(168,143,0
),
(165,140,0
),
(159,134,2
),
(147,123,51
),
(123,127,831
),
(192,164,540
),
(192,181,454
),
(185,186,391
),
(183,186,330
),
(181,183,285
),
(182,181,251
),
(177,177,225
),
(177,173,206
),
(177,171,191
),
(178,169,181
),
(175,166,172
),
(176,165,165
),
(171,164,158
),
(172,163,154
),
(171,162,152
),
(173,162,149
),
(175,161,147
),
(175,161,145
),
(170,161,144
),
(173,160,143
),
(172,160,141
),
(170,160,142
),
(172,159,142
),
(171,159,142
),
(173,158,141
),
(173,159,148
),
(175,198,0
),
(200,168,0
),
(180,150,0
),
(168,138,0
),
(162,132,5
),
(156,129,22
),
(150,128,29
),
(141,122,72
),
(120,119,1023
),
(209,179,601
),
(189,185,518
),
(193,192,448
),
(190,197,385
),
(187,194,339
),
(189,191,303
),
(185,187,272
),
(187,183,250
),
(183,180,230
),
(184,176,215
),
(180,176,204
),
(181,173,193
),
(177,172,184
),
(176,171,176
),
(177,170,173
),
(179,167,168
),
(179,166,164
),
(178,167,161
),
(175,166,158
),
(174,165,155
),
(176,165,153
),
(172,164,151
),
(172,164,150
),
(172,165,150
),
(171,162,148
),
(171,162,147
),
(172,163,146
),
(173,163,145
),
(174,163,144
),
(174,161,146
),
(170,162,145
),
(177,166,147
),
(176,163,145
),
(177,162,142
),
(177,163,140
),
(172,0,183
),
(197,0,136
),
(153,5,120
),
(140,19,113
),
(135,41,112
),
(132,57,113
),
(128,86,112
),
(128,490,139
),
(154,545,197
),
(182,457,208
),
(186,431,212
),
(190,381,207
),
(181,325,197
),
(178,280,185
),
(174,246,177
),
(172,227,170
),
(171,210,165
),
(171,201,161
),
(170,194,158
),
(171,189,155
),
(167,186,152
),
(171,183,151
),
(171,179,150
),
(171,178,150
),
(171,177,149
),
(169,176,147
),
(168,173,146
),
(168,172,145
),
(171,172,145
),
(172,170,144
),
(171,170,144
),
(169,168,144
),
(168,168,145
),
(168,168,142
),
(170,167,142
),
(171,170,142
),
(180,168,144
),
(222,0,159
),
(180,0,127
),
(153,0,115
),
(143,22,108
),
(138,42,108
),
(136,63,111
),
(135,81,112
),
(134,163,116
),
(157,763,198
),
(172,500,209
),
(183,412,208
),
(182,351,199
),
(187,347,200
),
(183,312,193
),
(182,275,185
),
(175,247,177
),
(174,228,170
),
(170,213,163
),
(170,204,160
),
(169,197,158
),
(169,191,155
),
(172,189,154
),
(171,186,153
),
(168,183,151
),
(170,181,149
),
(167,181,149
),
(167,178,147
),
(168,176,147
),
(173,175,148
),
(172,175,147
),
(169,174,145
),
(171,173,144
),
(167,172,144
),
(168,170,144
),
(171,171,145
),
(168,170,145
),
(167,170,145
),
(171,168,143
),
(168,172,143
),
(231,0,166
),
(152,0,129
),
(140,2,115
),
(122,16,112
),
(117,37,110
),
(114,51,110
),
(110,63,111
),
(109,88,112
),
(119,214,117
),
(173,874,207
),
(177,425,195
),
(171,358,188
),
(171,315,180
),
(174,309,177
),
(177,292,174
),
(176,268,170
),
(175,245,166
),
(176,228,163
),
(177,217,158
),
(176,207,154
),
(175,202,152
),
(175,196,150
),
(172,192,149
),
(173,188,149
),
(176,184,148
),
(173,184,147
),
(173,183,145
),
(174,180,144
),
(174,180,144
),
(172,177,144
),
(176,178,145
),
(176,176,144
),
(175,175,143
),
(169,175,143
),
(174,176,143
),
(171,173,142
),
(175,174,142
),
(174,172,144
),
(173,171,143
),
(175,172,142
),
(170,172,141
),
(170,172,140
),
(173,171,141
),
(170,169,141
),
(172,168,142
),
(173,169,141
),
(171,169,140
),
(170,170,140
),
(168,168,140
),
(169,167,139
),
(170,167,140
),
(168,167,141
),
(169,166,140
),
(169,167,141
),
(168,167,140
),
(169,167,139
),
(172,166,140
),
(131,197,155
),
(0,144,153
),
(0,155,185
),
(0,151,184
),
(0,144,178
),
(0,136,167
),
(0,128,153
),
(0,124,145
),
(0,118,144
),
(28,116,131
),
(77,128,131
),
(122,136,132
),
(150,142,132
),
(171,149,135
),
(192,155,139
),
(207,160,140
),
(220,164,141
),
(237,171,143
),
(248,175,142
),
(258,177,144
),
(269,180,146
),
(276,183,146
),
(289,186,149
),
(293,190,150
),
(295,193,150
),
(300,195,151
),
(305,196,151
),
(309,197,153
),
(308,198,153
),
(290,192,151
),
(302,195,154
),
(305,197,153
),
(305,197,153
),
(304,199,154
),
(309,197,155
),
(305,201,158
),
(304,212,165
),
(83,164,153
),
(0,147,163
),
(0,142,167
),
(0,139,164
),
(0,130,156
),
(0,131,154
),
(0,124,148
),
(19,120,135
),
(64,126,132
),
(104,133,131
),
(142,141,133
),
(175,150,136
),
(198,156,138
),
(214,162,140
),
(226,167,142
),
(240,172,144
),
(251,176,144
),
(264,181,146
),
(279,185,148
),
(288,188,148
),
(290,190,150
),
(299,193,151
),
(308,195,152
),
(321,199,153
),
(328,202,155
),
(331,204,155
),
(330,205,156
),
(333,207,157
),
(336,209,158
),
(339,210,159
),
(341,212,158
),
(337,212,159
),
(338,211,159
),
(342,212,160
),
(343,213,161
),
(345,214,160
),
(341,214,161
),
(341,215,160
),
(341,215,161
),
(341,215,161
),
(337,215,161
),
(335,214,161
),
(337,213,162
),
(335,214,162
),
(333,214,162
),
(329,214,161
),
(330,213,160
),
(325,214,161
),
(323,212,161
),
(325,211,162
),
(320,211,161
),
(315,212,161
),
(316,212,161
),
(312,210,160
),
(364,224,166
),
(248,207,165
),
(47,162,158
),
(0,149,172
),
(0,144,167
),
(0,152,173
),
(0,138,163
),
(0,139,165
),
(0,139,168
),
(0,127,150
),
(13,123,138
),
(103,135,136
),
(131,139,132
),
(176,149,137
),
(196,157,139
),
(214,164,142
),
(233,170,143
),
(247,175,145
),
(263,181,147
),
(268,184,147
),
(281,189,149
),
(288,193,151
),
(299,194,153
),
(306,196,154
),
(313,201,157
),
(320,203,155
),
(327,205,157
),
(330,210,157
),
(334,208,159
),
(334,210,159
),
(350,213,155
),
(338,209,174
),
(340,209,162
),
(338,210,160
),
(335,228,159
),
(333,215,158
),
(335,212,156
),
(362,213,170
),
(339,211,174
),
(340,211,165
),
(338,220,161
),





]  # y contains three arrays/lists/tuples

constant=5/1024
arr = np.array(y) 
y=arr * constant
# Count the number of arrays in y
num_arrays = len(y)
print(f"Number of arrays in y: {num_arrays}")

# Generate x automatically based on the number of items in each tuple of y
x = list(range(1, len(y) + 1))  # Assuming the number of sub-arrays is the number of x values
arrx=np.array(x)
x=arrx*0.01

# Plotting
plt.figure(figsize=(10, 6))

# Plot each "column" of y as a separate graph
for col in range(len(y[0])):  # Iterate over the number of elements in each tuple (columns)
    y_values = [y[row][col] for row in range(len(y))]  # Extract the 'col' element from each tuple
    plt.plot(x, y_values, label=f'Sensor {col + 1}')

# Adding labels and legend
plt.xlabel('Time  (sec)')
plt.ylabel('Voltage  (Volt)')
plt.title('Graph of TENG output with DELAY Algorithm')
plt.legend()
plt.grid(True)

# Show plot
plt.show()
